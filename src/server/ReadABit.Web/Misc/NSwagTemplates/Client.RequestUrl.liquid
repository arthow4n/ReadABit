let url_ = this.baseUrl + "/{{ operation.Path }}{% if operation.HasQueryParameters %}?{% endif %}";
{% for parameter in operation.PathParameters -%}
{%     if parameter.IsRequired -%}
if (request.{{ parameter.VariableName }} === undefined || request.{{ parameter.VariableName }} === null)
    throw new Error("The parameter 'request.{{ parameter.VariableName }}' must be defined.");
{%     else -%}
if (request.{{ parameter.VariableName }} !== null && request.{{ parameter.VariableName }} !== undefined)
{%     endif -%}
{%     if parameter.IsDateOrDateTimeArray -%}
url_ = url_.replace("{{ "{" }}{{ parameter.Name }}}", encodeURIComponent(request.{{ parameter.VariableName }}.map(s_ => s_ ? s_.toJSON() : "null").join()));
{%     elseif parameter.IsDateOrDateTime -%}
url_ = url_.replace("{{ "{" }}{{ parameter.Name }}}", encodeURIComponent(request.{{ parameter.VariableName }} ? "" + request.{{ parameter.VariableName }}.toJSON() : "null"));
{%     elseif parameter.IsArray -%}
url_ = url_.replace("{{ "{" }}{{ parameter.Name }}}", encodeURIComponent(request.{{ parameter.VariableName }}.join()));
{%     else -%}
url_ = url_.replace("{{ "{" }}{{ parameter.Name }}}", encodeURIComponent("" + request.{{ parameter.VariableName }}));
{%     endif -%}
{%     if parameter.IsOptional -%}
else
    url_ = url_.replace("/{{ "{" }}{{ parameter.Name }}}", "");
{%     endif -%}
{% endfor -%}
{% for parameter in operation.QueryParameters -%}
{%     if parameter.IsRequired -%}
{%         if parameter.IsNullable -%}
if (request.{{ parameter.VariableName }} === undefined)
    throw new Error("The parameter 'request.{{ parameter.VariableName }}' must be defined.");
else if(request.{{ parameter.VariableName }} !== null)
{%         else -%}
if (request.{{ parameter.VariableName }} === undefined || request.{{ parameter.VariableName }} === null)
    throw new Error("The parameter 'request.{{ parameter.VariableName }}' must be defined and cannot be null.");
else
{%         endif -%}
{%     else -%}
{%         if parameter.IsNullable -%}
if (request.{{ parameter.VariableName }} !== undefined && request.{{ parameter.VariableName }} !== null)
{%         else -%}
if (request.{{ parameter.VariableName }} === null)
    throw new Error("The parameter 'request.{{ parameter.VariableName }}' cannot be null.");
else if (request.{{ parameter.VariableName }} !== undefined)
{%         endif -%}
{%     endif -%}
{%     if parameter.IsDateOrDateTimeArray -%}
    request.{{ parameter.VariableName }} && request.{{ parameter.VariableName }}.forEach(item_ => { url_ += "{{ parameter.Name }}=" + encodeURIComponent(item_ ? "" + item_.toJSON() : "null") + "&"; });
{%     elseif parameter.IsObjectArray -%}
    request.{{ parameter.VariableName }} && request.{{ parameter.VariableName }}.forEach((item, index) => {
        for (let attr in item)
			if (item.hasOwnProperty(attr)) {
				url_ += "{{ parameter.Name }}[" + index + "]." + attr + "=" + encodeURIComponent("" + (<any>item)[attr]) + "&";
			}
    });
{%     elseif parameter.IsDateOrDateTime -%}
    url_ += "{{ parameter.Name }}=" + encodeURIComponent(request.{{ parameter.VariableName }} ? "" + request.{{ parameter.VariableName }}.toJSON() : "{{ QueryNullValue }}") + "&";
{%     elseif parameter.IsArray -%}
    request.{{ parameter.VariableName }} && request.{{ parameter.VariableName }}.forEach(item => { url_ += "{{ parameter.Name }}=" + encodeURIComponent("" + item) + "&"; });
{%     else -%}
    url_ += "{{ parameter.Name }}=" + encodeURIComponent("" + request.{{ parameter.VariableName }}) + "&";
{%     endif -%}
{% endfor -%}
url_ = url_.replace(/[?&]$/, "");
